$NetBSD: patch-bf,v 1.6 2012/04/01 15:18:45 ryoon Exp $

--- js/src/jsnativestack.cpp.orig	2012-03-13 01:36:56.000000000 +0000
+++ js/src/jsnativestack.cpp
@@ -50,10 +50,24 @@
 #elif defined(XP_MACOSX) || defined(DARWIN) || defined(XP_UNIX)
 # include <pthread.h>
 
-# if defined(__FreeBSD__) || defined(__OpenBSD__)
+# if defined(__QNXNTO__)
+#  include <sys/storage.h>
+#  include <sys/mman.h>
+#  ifndef ROUNDUP
+#  define ROUNDUP(x, m)   (((x) + (m) - 1) & ~((m) - 1))
+#  endif
+# endif
+
+# if defined(__OpenBSD__) || defined(__DragonFly__)
 #  include <pthread_np.h>
 # endif
 
+# if defined(__FreeBSD__) 
+_Pragma("GCC visibility push(default)")
+#  include <pthread_np.h>
+_Pragma("GCC visibility pop")
+# endif
+
 #else
 # error "Unsupported platform"
 
@@ -139,13 +153,23 @@ GetNativeStackBaseImpl()
     pthread_t thread = pthread_self();
 # if defined(XP_MACOSX) || defined(DARWIN)
     return pthread_get_stackaddr_np(thread);
+# elif defined(__QNXNTO__)
+    void *stackBase = 0;
+    size_t stackSize = 0;
+    stackBase =  __tls()->__stackaddr;
+    stackSize = ROUNDUP((uintptr_t)__tls(), __PAGESIZE) - (uintptr_t)(stackBase);
 
+#  if JS_STACK_GROWTH_DIRECTION > 0
+    return stackBase;
+#  else
+    return static_cast<char*>(stackBase) + stackSize;
+#  endif
 # else
     pthread_attr_t sattr;
     pthread_attr_init(&sattr);
 #  if defined(__OpenBSD__)
     stack_t ss;
-#  elif defined(PTHREAD_NP_H) || defined(_PTHREAD_NP_H_) || defined(NETBSD)
+#  elif defined(PTHREAD_NP_H) || defined(_PTHREAD_NP_H_) || defined(__DragonFly__) || defined(NETBSD) || defined(__NetBSD__) /* XXX tnn not sure why NETBSD isn't defined, it looks like it should be ... */
     /* e.g. on FreeBSD 4.8 or newer, neundorf@kde.org */
     pthread_attr_get_np(thread, &sattr);
 #  else
