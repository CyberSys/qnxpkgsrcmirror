$NetBSD: patch-ac,v 1.8 2009/03/10 18:30:44 apb Exp $

--- configure.in.orig	2008-10-31 11:22:23.000000000 -0400
+++ configure.in
@@ -2687,7 +2687,7 @@ AC_CHECK_FUNC(gethostbyname, AC_DEFINE(H
 	AC_CHECK_LIB(nsl, gethostbyname, AC_DEFINE(HAVE_GETHOSTBYNAME)
 	LIBS="${LIBS} -lnsl"))
 
-# SCO Unixware 7.1.4 finds gethostbyname() in -lsocket
+# SCO Unixware 7.1.4 and QNX find gethostbyname() in -lsocket
 AC_CHECK_FUNC(gethostbyname, AC_DEFINE(HAVE_GETHOSTBYNAME),
 	AC_CHECK_LIB(socket, gethostbyname, AC_DEFINE(HAVE_GETHOSTBYNAME)
 	LIBS="${LIBS} -lsocket"))
@@ -2697,6 +2697,8 @@ AC_CHECK_LIB(kstat, kstat_lookup,
         AC_DEFINE(HAVE_LIBKSTAT, 1, [Define to 1 if you have the `kstat' library (-lkstat).])
         LNETSNMPLIBS="${LNETSNMPLIBS} -lkstat")
 
+AC_CHECK_LIB(des, des_cbc_encrypt)
+
 # Check for libraries that the agent needs
 # saving old libraries
 NONAGENTLIBS=$LIBS
@@ -3425,6 +3427,12 @@ AC_CHECK_HEADERS(netinet/ip6.h netinet6/
 #if HAVE_NETINET_IP6_H
 #include <netinet/ip6.h>
 #endif
+#if HAVE_NET_IF_H
+#include <net/if.h>
+#endif
+#if HAVE_NET_ROUTE_H
+#include <net/route.h>
+#endif
 ]])
 # DYNAMIC MODULE SUPPORT
 AC_CHECK_HEADERS(dlfcn.h)
@@ -3671,8 +3679,11 @@ AC_CHECK_FUNCS(getaddrinfo getipnodebyna
 # BSDi2 functions differ
 AC_CHECK_FUNCS(statvfs statfs)
 AC_CHECK_FUNCS(getdtablesize)
-# freebsd2 checks
-AC_CHECK_FUNCS(getfsstat)
+# freebsd2 checks, QNX finds getfsstat() in -lnbutil
+AC_CHECK_FUNC(getfsstat, AC_DEFINE(HAVE_GETGETFSSTAT),
+	AC_CHECK_LIB(nbutil, getfsstat, AC_DEFINE(HAVE_GETGETFSSTAT)
+	AC_DEFINE(HAVE_LIBNBUTIL)
+	LIBS="${LIBS} -lnutil"))
 AC_CHECK_FUNCS(usleep)
 AC_CHECK_FUNCS(setlocale)
 AC_CHECK_FUNCS(tcgetattr)
@@ -3864,8 +3875,10 @@ AC_CHECK_STRUCT_FOR([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 ], sockaddr, sa_len, no)
 
@@ -3876,8 +3889,10 @@ AC_CHECK_STRUCT_FOR([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 ], sockaddr, sa_union.sa_generic.sa_family2, no)
 
@@ -3912,8 +3927,10 @@ AC_CHECK_STRUCT_FOR([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 #undef KERNEL
 #undef _KERNEL
@@ -3932,8 +3949,10 @@ AC_TRY_COMPILE([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 #undef KERNEL
 #undef _KERNEL
@@ -3958,8 +3977,10 @@ AC_TRY_COMPILE([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 #undef KERNEL
 #undef _KERNEL
@@ -4017,8 +4038,10 @@ AC_TRY_COMPILE([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 #undef KERNEL
 #undef _KERNEL
@@ -4057,8 +4080,10 @@ AC_CHECK_STRUCT_FOR([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 #undef KERNEL
 #undef _KERNEL
@@ -4072,8 +4097,10 @@ AC_CHECK_STRUCT_FOR([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 #undef KERNEL
 #undef _KERNEL
@@ -4087,8 +4114,10 @@ AC_CHECK_STRUCT_FOR([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 #undef KERNEL
 #undef _KERNEL
@@ -4102,8 +4131,10 @@ AC_CHECK_STRUCT_FOR([
 #include <sys/types.h>
 #ifdef IFNET_NEEDS_KERNEL
 #define KERNEL
+#if !defined(__DragonFly__)
 #define _KERNEL
 #endif
+#endif
 #include <sys/socket.h>
 #undef KERNEL
 #undef _KERNEL
@@ -4162,6 +4193,7 @@ AC_CHECK_IFNET_FOR(if_noproto)
 AC_CHECK_IFNET_FOR(if_omcasts)
 AC_CHECK_IFNET_FOR(if_xname,no)
 AC_CHECK_IFNET_FOR(if_lastchange.tv_sec)
+AC_CHECK_IFNET_FOR(if_lastchange.tv_nsec)
 AC_CHECK_IFNET_FOR(if_obytes)
 AC_CHECK_IFNET_FOR(if_ibytes)
 AC_CHECK_IFNET_FOR(if_addrlist)
